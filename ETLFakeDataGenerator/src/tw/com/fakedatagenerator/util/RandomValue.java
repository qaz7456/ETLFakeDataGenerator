package tw.com.fakedatagenerator.util;

import java.util.HashMap;
import java.util.Map;
import java.util.Random;

public class RandomValue {
    public static String base = "abcdefghijklmnopqrstuvwxyz0123456789";   
    private static String firstName="趙錢孫李周吳鄭王馮陳褚衛蔣沈韓楊朱秦尤許何呂施張孔曹嚴華金魏陶姜戚謝鄒喻柏水竇章云蘇潘葛奚範彭郎魯韋昌馬苗鳳花方俞任袁柳酆鮑史唐費廉岑薛雷賀倪湯滕殷羅畢郝鄔安常樂於時傅皮卞齊康伍餘元卜顧孟平黃和穆蕭尹姚邵湛汪祁毛禹狄米貝明臧計伏成戴談宋茅龐熊紀舒屈項祝董梁杜阮藍閔席季麻強賈路婁危江童顏郭梅盛林刁鐘徐邱駱高夏蔡田樊胡凌霍虞萬支柯咎管盧莫經房裘繆幹解應宗宣丁賁鄧鬱單杭洪包諸左石崔吉鈕龔程嵇邢滑裴陸榮翁荀羊於惠甄魏加封芮羿儲靳汲邴糜松井段富巫烏焦巴弓牧隗山谷車侯宓蓬全郗班仰秋仲伊宮寧仇欒暴甘鈄厲戎祖武符劉姜詹束龍葉幸司韶郜黎薊薄印宿白懷蒲台從鄂索咸籍賴卓藺屠蒙池喬陰鬱胥能蒼雙聞莘黨翟譚貢勞逄姬申扶堵冉宰酈雍卻璩桑桂濮牛壽通邊扈燕冀郟浦尚農溫別莊晏柴瞿閻充慕連茹習宦魚容向古易慎戈廖庚終暨居衡步都耿滿弘匡國文寇廣祿闕東毆殳沃利蔚越夔隆師鞏厙聶晁勾敖融冷訾辛闞那簡饒空曾毋沙乜養鞠須豐巢關蒯相查後江紅遊竺權逯蓋益桓公万俟司馬上官歐陽夏侯諸葛聞人東方赫連皇甫尉遲公羊澹台公冶宗政濮陽淳于仲孫太叔申屠公孫樂正軒轅令狐鍾離閭丘長孫慕容鮮于宇文司徒司空亓官司寇仉督子車顓孫端木巫馬公西漆雕樂正壤駟公良拓拔夾谷宰父谷粱晉楚閻法汝鄢塗欽段干百里東郭南門呼延歸海羊舌微生岳帥緱亢況後有琴梁丘左丘東門西門商牟佘佴伯賞南宮墨哈譙笪年愛陽佟第五言福百家姓續";  
    private static String girl="秀娟英華慧巧美娜靜淑惠珠翠雅芝玉萍紅娥玲芬芳燕彩春菊蘭鳳潔梅琳素雲蓮真環雪榮愛妹霞香月鶯媛艷瑞凡佳嘉瓊勤珍貞莉桂娣葉璧璐婭琦晶妍茜秋珊莎錦黛青倩婷姣婉嫻瑾穎露瑤怡嬋雁蓓紈儀荷丹蓉眉君琴蕊薇菁夢嵐苑婕馨瑗琰韻融園藝詠卿聰瀾純毓悅昭冰爽琬茗羽希寧欣飄育瀅馥筠柔竹靄凝曉歡霄楓芸菲寒伊亞宜可姬舒影荔枝思麗";  
    private static String boy="偉剛勇毅俊峰強軍平保東文輝力明永健世廣志義興良海山仁波寧貴福生龍元全國勝學祥才發武新利清飛彬富順信子傑濤昌成康星光天達安岩中茂進林有堅和彪博誠先敬震振壯會思群豪心邦承樂紹功松善厚慶磊民友裕河哲江超浩亮政謙亨奇固之輪翰朗伯宏言若鳴朋斌梁棟維啟克倫翔旭鵬澤晨辰士以建家致樹炎德行時泰盛雄琛鈞冠策騰楠榕風航弘";  
    private static String[] road="重慶大廈,黑龍江路,十梅庵街,遵義路,湘潭街,瑞金廣場,仙山街,仙山東路,仙山西大廈,白沙河路,趙紅廣場,機場路,民航街,長城南路,流亭立交橋,虹橋廣場,長城大廈,禮陽路,風崗街,中川路,白塔廣場,興陽路,文陽街,繡城路,河城大廈,錦城廣場,崇陽街,華城路,康城街,正陽路,和陽廣場,中城路,江城大廈,順城路,安城街,山城廣場,春城街,國城路,泰城街,德陽路,明陽大廈,春陽路,艷陽街,秋陽路,碩陽街,青威高速,瑞陽街,豐海路,雙元大廈,惜福鎮街道,夏莊街道,古廟工業園,中山街,太平路,廣西街,濰縣廣場,博山大廈,湖南路,濟寧街,芝罘路,易州廣場,荷澤四路,荷澤二街,荷澤一路,荷澤三大廈,觀海二廣場,廣西支街,觀海一路,濟寧支街,莒縣路,平度廣場,明水路,蒙陰大廈,青島路,湖北街,江寧廣場,郯城街,天津路,保定街,安徽路,河北大廈,黃島路,北京街,莘縣路,濟南街,寧陽廣場,照街,德縣路,新泰大廈,荷澤路,山西廣場,沂水路,肥城街,蘭山路,四方街,平原廣場,泗水大廈,浙江路,曲阜街,壽康路,河南廣場,泰安路,大沽街,紅山峽支路,西陵峽一大廈,台西緯一廣場,台西緯四街,台西緯二路,西陵峽二街,西陵峽三路,台西緯三廣場,台西緯五路,明月峽大廈,青銅峽路,台西二街,觀音峽廣場,瞿塘峽街,團島二路,團島一街,台西三路,台西一大廈,鄆城南路,團島三街,劉家峽路,西藏二街,西藏一廣場,台西四街,三門峽路,城武支大廈,紅山峽路,鄆城北廣場,龍羊峽路,西陵峽街,台西五路,團島四街,石村廣場,巫峽大廈,四川路,壽張街,嘉祥路,南村廣場,範縣路,西康街,雲南路,鉅野大廈,西江廣場,魚台街,單縣路,定陶街,滕縣路,鉅野廣場,觀城路,汶上大廈,朝城路,滋陽街,鄒縣廣場,濮縣街,磁山路,汶水街,西藏路,城武大廈,團島路,南陽街,廣州路,東平街,棗莊廣場,貴州,費縣路,南海大廈,登州路,文登廣場,信號山支路,延安一街,信號山路,興安支街,福山支廣場,紅島支大廈,萊蕪二路,吳縣一街,金口三路,金口一廣場,伏龍山路,魚山支街,觀像二路,吳縣二大廈,萊蕪一廣場,金口二街,海陽路,龍口街,恆山路,魚山廣場,掖縣路,福山大廈,紅島路,常州街,大學廣場,龍華街,齊河路,萊陽街,黃縣路,張店大廈,祚山路,蘇州街,華山路,伏龍街,江蘇廣場,龍江街,王村路,琴嶼大廈,齊東路,京山廣場,龍山路,牟平街,延安三路,延吉街,南京廣場,東海東大廈,銀川西路,海口街,山東路,紹興廣場,芝泉路,東海中街,寧夏路,香港西大廈,隆德廣場,揚州街,鄖陽路,太平角一街,寧國二支路,太平角二廣場,天台東一路,太平角三大廈,漳州路一路,漳州街二街,寧國一支廣場,太平角六街,太平角四路,天台東二街,太平角五路,寧國三大廈,澳門三路,江西支街,澳門二路,寧國街,大堯一廣場,咸陽支街,洪澤湖路,吳興二大廈,澄海三路,天台一廣場,新湛二路,三明北街,新湛支路,湛山五街,泰州三廣場,湛山四大廈,閩江三路,澳門四街,南海支路,吳興三廣場,三明南路,湛山二街,二輕新村鎮,江南大廈,吳興一廣場,珠海二街,嘉峪關路,高郵湖街,湛山三路,澳門六廣場,泰州二路,東海一大廈,天台二路,微山湖街,洞庭湖廣場,珠海支街,福州南路,澄海二街,泰州四路,香港中大廈,澳門五路,新湛三街,澳門一路,正陽關街,寧武關廣場,閩江四街,新湛一路,寧國一大廈,王家麥島,澳門七廣場,泰州一路,泰州六街,大堯二路,青大一街,閩江二廣場,閩江一大廈,屏東支路,湛山一街,東海西路,徐家麥島函谷關廣場,大堯三路,曉望支街,秀湛二路,逍遙三大廈,澳門九廣場,泰州五街,澄海一路,澳門八街,福州北路,珠海一廣場,寧國二路,臨淮關大廈,燕兒島路,紫荊關街,武勝廣場,逍遙一街,秀湛四路,居庸關街,山海關路,鄱陽湖大廈,新湛路,漳州街,仙遊路,花蓮街,樂清廣場,巢湖街,台南路,吳興大廈,新田路,福清廣場,澄海路,莆田街,海遊路,鎮江街,石島廣場,宜興大廈,三明路,仰口街,沛縣路,漳浦廣場,大麥島,台灣街,天台路,金湖大廈,高雄廣場,海江街,岳陽路,善化街,榮成路,澳門廣場,武昌路,閩江大廈,台北路,龍巖街,咸陽廣場,寧德街,龍泉路,麗水街,海川路,彰化大廈,金田路,泰州街,太湖路,江西街,泰興廣場,青大街,金門路,南通大廈,旌德路,匯泉廣場,寧國路,泉州街,如東路,奉化街,鵲山廣場,蓮島大廈,華嚴路,嘉義街,古田路,南平廣場,秀湛路,長汀街,湛山路,徐州大廈,豐縣廣場,汕頭街,新竹路,黃海街,安慶路,基隆廣場,韶關路,雲霄大廈,新安路,仙居街,屏東廣場,曉望街,海門路,珠海街,上杭路,永嘉大廈,漳平路,鹽城街,新浦路,新昌街,高田廣,市場三街,金鄉東路,市場二大廈,上海支路,李村支廣場,惠民南路,市場緯街,長安南路,陵縣支街,冠縣支廣場,小港一大廈,市場一路,小港二街,清平路,廣東廣場,新疆路,博平街,港通路,小港沿,福建廣場,高唐街,茌平路,港青街,高密路,陽谷廣場,平陰路,夏津大廈,邱縣路,渤海街,恩縣廣場,旅順街,堂邑路,李村街,即墨路,港華大廈,港環路,館陶街,普集路,朝陽街,甘肅廣場,港夏街,港聯路,陵縣大廈,上海路,寶山廣場,武定路,長清街,長安路,惠民街,武城廣場,聊城大廈,海泊路,滄口街,寧波路,膠州廣場,萊州路,招遠街,冠縣路,六碼頭,金鄉廣場,禹城街,臨清路,東阿街,吳淞路,大港沿,遼寧路,棣緯二大廈,大港緯一路,貯水山支街,無棣緯一廣場,大港緯三街,大港緯五路,大港緯四街,大港緯二路,無棣二大廈,吉林支路,大港四街,普集支路,無棣三街,黃台支廣場,大港三街,無棣一路,貯水大廈,泰山支路,大港一廣場,無棣四路,大連支街,大港二路,錦州支街,德平廣場,高苑大廈,長山路,樂陵街,臨邑路,嫩江廣場,合江路,大連街,博興路,蒲台大廈,黃台廣場,城陽街,臨淄路,安邱街,臨朐路,青城廣場,商河路,熱河大廈,濟陽路,承德街,淄川廣場,遼北街,陽信路,益都街,松江路,流亭大廈,吉林路,恆台街,包頭路,無棣街,鐵山廣場,錦州街,桓台路,興安大廈,鄒平路,膠東廣場,章丘路,丹東街,華陽路,青海街,泰山廣場,周村大廈,四平路,台東西七街,台東東二路,台東東七廣場,台東西二路,東五街,雲門二路,芙蓉山村,延安二廣場,雲門一街,台東四路,台東一街,台東二路,杭州支廣場,內蒙古路,台東七大廈,台東六路,廣饒支街,台東八廣場,台東三街,四平支路,郭口東街,青海支路,瀋陽支大廈,菜市二路,菜市一街,北仲三路,瑞雲街,濱縣廣場,慶祥街,萬壽路,大成大廈,芙蓉路,歷城場,大名路,昌平街,平定路,長興街,浦口廣場,諸城大廈,和興路,德盛街,寧海路,威海廣場,東山路,清和街,姜溝路,雒口大廈,松山廣場,長春街,昆明路,順興街,利津路,陽明廣場,人和路,郭口大廈,營口路,昌邑街,孟莊廣場,豐盛街,埕口路,丹陽街,漢口路,洮南大廈,桑梓路,沾化街,山口路,瀋陽街,南口廣場,振興街,通化路,福寺大廈,嶧縣路,壽光廣場,曹縣路,昌樂街,道口路,南九水街,台湛廣場,東光大廈,駝峰路,太平山,標山路,雲溪廣場,太清路".split(",");  
    private static final String[] email_suffix="@gmail.com,@yahoo.com,@msn.com,@hotmail.com,@aol.com,@ask.com,@live.com,@qq.com,@0355.net,@163.com,@163.net,@263.net,@3721.net,@yeah.net,@googlemail.com,@126.com,@sina.com,@sohu.com,@yahoo.com.cn".split(",");  
      
    public static int getNum(int start,int end) {  
        return (int)(Math.random()*(end-start+1)+start);  
    }  
      
    public static String getEmail(int lMin,int lMax) {  
        int length=getNum(lMin,lMax);  
        StringBuffer sb = new StringBuffer();       
        for (int i = 0; i < length; i++) {       
            int number = (int)(Math.random()*base.length());  
            sb.append(base.charAt(number));       
        }  
        sb.append(email_suffix[(int)(Math.random()*email_suffix.length)]);  
        return sb.toString();     
    }  
    
    private static String[] tel="45,35,16,37,13,39,15,11,02,57,58,59,10,31,32,55,56,73,18".split(",");  
    public static String getTel() {
        String first=String.valueOf(tel[getNum(0,tel.length-1)]);   
        String second=String.valueOf(tel[getNum(0,tel.length-1)]);  
        String third=String.valueOf(tel[getNum(0,tel.length-1)]);
        String four=String.valueOf(tel[getNum(0,tel.length-1)]);    
        return "09"+first+second+third+four;  
    } 

    private static String name_sex = "";  
    public static String getChineseName() {  
        int index=getNum(0, firstName.length()-1);  
        String first=firstName.substring(index, index+1);  
        int sex=getNum(0,1);  
        String str=boy;  
        int length=boy.length();  
        if(sex==0){  
            str=girl;  
            length=girl.length();  
            name_sex = "女";  
        }else {  
            name_sex="男";  
        }  
        index=getNum(0,length-1);  
        String second=str.substring(index, index+1);  
        int hasThird=getNum(0,1);  
        String third="";  
        if(hasThird==1){  
            index=getNum(0,length-1);  
            third=str.substring(index, index+1);  
        }  
        return first+second+third;  
    }

    private static String getRoad() {  
        int index=getNum(0,road.length-1);  
        String first=road[index];  
        String second=String.valueOf(getNum(11,150))+"号";  
        String third="-"+getNum(1,20)+"-"+getNum(1,10);  
        return first+second+third;  
    }  
    
    
    public static String getUnicde(){
    	String[] unicodes = {"12898894","16044638","16713095","22802270","23827361","24904610","25023022","28741194","28764196","53406900","53636781","54063234","54063419","54069510","54549687","64816212","64856071","64859653","64954679","64964780","68336642","69298836","71620635","74710688","84498242","86608434","16559585","16709542","23194936","23704635","23876469","24919135","25081009","25157252","27704684","27845994","28345820","28351863","28367767","28542456","51652905","53036920","53370234","53488249","53780188","54073319","54077429","54563913","54567354","54568776","54569445","64555103","64843718","64903736","70508064","70652861","79986137","80135389","86395501","89257989","89828572","96898691","97268593","23260105","24907047","27277789","28934262","53491482","53621133","53830238","54088452","54567278","64813313","64864369","64964043","64970158","66407753","69663910","69764163","70507353","80557633","97036861","12760194","16214302","24261243","24280446","24910768","24912225","24913049","24922286","27285697","27445580","28330122","45897987","53032500","53855589","54549357","59303368","64875529","64892484","64895124","64945291","68386706","69525558","70465924","72091850","72119908","73644155","73707806","73730335","80472614","80486764","84365209","84858288","86070659","86567601","86793472","96992767","16363174","16900771","16942745","22684196","24915460","25151709","29122565","42566680","53146551","53855259","53901438","54065606","54070191","54080389","54549342","64573904","64851815","64909963","68214839","68467427","68979503","69350425","69828835","72054834","89577821","97022563","12781304","16201019","22493675","22605123","22812066","22929592","22943031","24899102","24905890","24909827","24910161","24912436","24918207","24921934","27514039","27586883","27706374","27918686","28015519","28025426","28791736","45892364","45893883","54064661","54069363","54079088","54083338","54552985","54553099","54556618","54563006","54563842","54569000","54570668","54574897","64857016","64917372","64959597","64967317","64969504","68212971","69388962","72175056","72190824","80139836","84199574","84229113","96863996","97335798","12606192","16271892","16484059","22002452","24402980","24918240","24925087","25154683","28722767","28811640","29088004","45891436","53132022","53795865","54072727","54557095","54576847","64858177","64919625","64967365","64969997","68338819","71078598","80100635","80133609","89537602","89704354","12901032","16375622","16655546","22972106","24674027","27389222","28377863","28724104","28738796","29117296","53049404","53600453","54060378","54060546","54084842","54562793","54565588","54574405","64399504","64502508","64835766","64870382","64904799","64919250","64922430","68212348","70602103","80016736","86786850","97176898","13023759","13044972","13074172","22284591","22584669","24207608","24252384","24923911","24926001","25077434","27893030","27895733","28059712","28586329","28875931","45894004","53075514","53779339","53817642","53858360","54065710","54069716","54072156","54088170","54549173","54570007","64425904","64804258","64887243","64962137","68097305","69410866","84081420","86113572","86618876","89371709","89729833","89861163","97199668","22531306","22594630","23692666","24898461","53858565","54074703","54077510","54078010","54083490","54560486","54572103","64400805","64863452","64956819","68450805","69640810","86077040","86956550","12604146","12885933","16207098","16577514","16701540","22301894","22964921","24220145","24361658","24907736","24908799","24909853","24913147","28641033","28761493","28794017","52374850","53629233","53846870","54065129","54073541","54081388","54208822","54555316","54569819","54575609","54825331","64826437","64832022","64861840","64919110","64937264","64960362","69514671","70534112","72047742","72211588","73663672","80066067","84543892","84604166","86198656","86220094","89814042","97250159","16732579","22799090","23361954","23687158","24422347","25190858","27583083","45897044","53390554","53500124","54553181","54570153","64955797","69278917","72094575","97136974","13051327","16530384","22272687","22704290","24899969","24902649","24903149","24905316","45894763","53475693","53490596","54085271","54577923","54616904","64842577","64882541","64924211","64953003","64967689","70416656","73720842","84828757","84974060","86837149","16004805","22131688","22406383","23390212","23872323","24370024","24901120","24913168","28123904","28588889","28948097","28964482","53239832","53279355","54060010","54066859","54071023","54088853","54180958","54556342","54574290","64836934","64868999","64898712","64911335","64962354","64968420","69523756","69592922","84416447","86504769","89224398","97266933","97379583","28781603","28919641","28946561","64851245","64956120","74719668","22229556","24468883","24912668","25047782","28387996","28470018","53074613","53513177","53649126","54067490","54553767","54555414","54572700","64296303","64383101","64556601","64840780","64902595","70534859","73670596","86096145","86521514","89306497","12773584","12894187","13005696","16680664","22671875","23673302","24244667","24770464","24909495","24910654","24921673","25193671","27378647","27388912","27779967","28409844","28558409","28749739","52632668","53039927","53133417","53137997","53306135","54068287","54076081","54555998","54556336","54556700","54558897","54566405","54576804","64806426","64808557","64924319","64957205","69635400","70620411","79980008","80319078","80704683","84074238","84875548","86680842","88146803","89541768","97231359","16678153","16906136","16918370","22918363","23401082","24898552","24900678","24904858","24916453","24917452","27605869","28103077","28642618","28743637","28774791","29084470","53274577","53509568","53515463","54064228","54064959","54086715","54087881","54556130","54565567","54574411","54577206","54582664","64869630","64916253","64922966","64963641","65107309","69563243","73124823","80076207","80324305","84081673","84402470","84428176","84537076","84710770","86656596","13022111","24292914","24909045","24924334","25011980","27858131","27918341","28320406","28405143","42673669","53868472","54067153","54071945","54522006","54550620","54561464","64901033","64918153","69561147","69702370","69715868","80113272","80122906","89228275","96956690","97067553","16737913","23955914","24236982","24898722","24910970","25029638","25084913","25189613","28592764","29106072","29122066","45897635","53136287","53986169","54066295","54072682","54087329","54555081","54555239","64848827","64913609","69554770","69775540","74414650","80083805","80100868","80142678","80409514","80413593","80432249","84188801","84237697","86610494","86821300","89632465","89834321","96910787","96956050","12787341","16234475","22316926","22775816","24915074","24919732","24920581","27285850","28052979","28353546","45891983","53393356","53620438","54088919","54552198","54553788","54574566","59143497","64805658","64870600","64898987","64933886","64970729","69539899","69681430","73688998","80369745","80641098","83715093","84658296","86576833","86607060","97007021","97270752","16538040","16568613","24909684","24922949","27280742","27300402","27420201","28807701","45896880","53360783","54060855","54558566","54577986","64861807","64904550","72205880","80409129","97482313"};

		Random random = new Random();

		return unicodes[random.nextInt(unicodes.length)];
    }
    
	public static String getRandomNumToStr(int size) {
		StringBuffer sBuffer = new StringBuffer();

		for (int i = 0; i < size; i++) {

			int num = new Random().nextInt(10);
			num = num == 0 ? num + 1 : num;
			
			sBuffer.append(String.valueOf(num));
		}
		return sBuffer.toString();
	}
    
    public static Map getAddress() {  
        Map map=new HashMap();  
        map.put("name", getChineseName());  
        map.put("sex", name_sex);  
        map.put("road", getRoad());  
        map.put("tel", getTel());  
        map.put("email", getEmail(6,9));  
        return map;  
    }  

    public static String getRandomTaiwanID(){
    	String checkHead = "ABCDEFGHJKLMNPQRSTUVWXYZIO";
		Random r = new Random();
		String s = "";
		int checknum = 0;	// 產生前9碼的同時計算產生驗證碼

		// 產生第一個英文字母
		int t=(r.nextInt(26)+65);
		s+=(char)t;
		t=checkHead.indexOf((char)t)+10;
		checknum += t/10;
		checknum += t%10*9;

		// 產生第2個數字 (1~2)
		s += Integer.toString(t = r.nextInt(2)+1);
		checknum += t*8;

		// 產生後8碼
		for (int i=2; i<9; i++){
			s += Integer.toString(t = r.nextInt(10));
			checknum += t*(9-i);
		}
		
		// 完成驗證碼計算
		checknum = (10-((checknum)%10))%10;
		s+=Integer.toString(checknum);

		return s;
    }
    public static void main(String[] args) {  
    	

//        for (int i = 0; i < 100; i++) {  
//            System.out.println(getTel());  
//          System.out.println(getEmailName(6,9));  
//        }  
    }
    
}
